steps:

  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA', '.']

  # Step 2: Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA']

  # Step 3: Deploy to Cloud Run with environment variables
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        SUPABASE_URL=$$(gcloud secrets versions access latest --secret=SUPABASE_URL_DEV_DEVIANTS)
        SUPABASE_SERVICE_ROLE_KEY=$$(gcloud secrets versions access latest --secret=SUPABASE_SERVICE_ROLE_KEY_DEV_DEVIANTS)
        
        echo "Deploying server with environment variables from Secret Manager"
        
        gcloud run deploy "$REPO_NAME" \
          --image "us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA" \
          --region us-central1 \
          --port=8080 \
          --allow-unauthenticated \
          --cpu=1 \
          --cpu-boost \
          --execution-environment=gen2 \
          --min-instances=1 \
          --set-env-vars=SUPABASE_URL="$${SUPABASE_URL}",SUPABASE_SERVICE_ROLE_KEY="$${SUPABASE_SERVICE_ROLE_KEY}",ENABLE_SCHEDULER=true,USE_TIMEZONE_SCHEDULES=true,SPORT_SCHEDULES=seasonal

    # Step 4: Apply Cloud Scheduler jobs (scale-up / scale-down)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        apt-get update && apt-get install -y wget
        wget https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -O /usr/bin/yq
        chmod +x /usr/bin/yq
        yq --version
        echo "Syncing Cloud Scheduler jobs from YAML..."

        for FILE in scale-up-scheduler.yaml scale-down-scheduler.yaml; do
          echo "Processing $$FILE ..."
        
          NAME=$$(basename $$FILE .yaml)   # e.g. "scale-up-scheduler"
          JOB_NAME=$${NAME/-scheduler/}   # e.g. "scale-up" or "scale-down"
        
          SCHEDULE=$$(yq -r '.schedule' $$FILE)
          TIMEZONE=$$(yq -r '.timeZone' $$FILE)
          URI=$$(yq -r '.httpTarget.uri' $$FILE)
          METHOD=$$(yq -r '.httpTarget.httpMethod' $$FILE)
          SERVICE_ACCOUNT=$$(yq -r '.httpTarget.oidcToken.serviceAccountEmail' $$FILE)
          HEADERS=$$(yq -r '.httpTarget.headers | to_entries | map(.key + "=" + .value) | join(",")' $$FILE)
          BODY=$$(yq -r '.httpTarget.body' $$FILE)

          echo "Validating extracted values..."
          echo "JOB=$$JOB_NAME, SCHEDULE=$$SCHEDULE, TIMEZONE=$$TIMEZONE, URI=$$URI, METHOD=$$METHOD"

          gcloud scheduler jobs create http "$$JOB_NAME-score-processor" \
            --location=us-central1 \
            --quiet \
            --schedule="$$SCHEDULE" \
            --time-zone="$$TIMEZONE" \
            --uri="$$URI" \
            --http-method="$$METHOD" \
            --oidc-service-account-email="$$SERVICE_ACCOUNT" \
            --headers="$$HEADERS" \
            --message-body="$$BODY" || true
          gcloud scheduler jobs update http "$$JOB_NAME-score-processor" \
            --location=us-central1 \
            --schedule="$$SCHEDULE" \
            --time-zone="$$TIMEZONE" \
            --uri="$$URI" \
            --http-method="$$METHOD" \
            --oidc-service-account-email="$$SERVICE_ACCOUNT" \
            --headers="$$HEADERS" \
            --message-body="$$BODY"
        done


images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
